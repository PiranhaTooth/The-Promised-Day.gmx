<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDesertBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0;
idd = 1;
idd2 = 1;
moveMax = 64;

up = 0;
down = 0;
left = 0;
right = 0;

dustDone = false;
soundPlayed = false;


//up

partDoorDustUpSys = part_system_create();
part_system_depth(partDoorDustUpSys,-100);

partDoorDustUp = part_type_create();
part_type_shape(partDoorDustUp,pt_shape_smoke);
part_type_color_mix(partDoorDustUp,3098978,1192777);
part_type_alpha2(partDoorDustUp,0.9776,0.0000);
part_type_life(partDoorDustUp,40.0000,50.0000);
part_type_size(partDoorDustUp,0.3500,0.4000,-0.0012,0.0028);
part_type_speed(partDoorDustUp,0.3215,1.1561,0.0037,0.0093);
part_type_direction(partDoorDustUp,225.0000,315.0000,-0.1899,0.0075);
part_type_orientation(partDoorDustUp,0.0000,360.0000,3.3055,-0.7553,0);
part_type_gravity(partDoorDustUp,0.0000,270.0000);
part_type_blend(partDoorDustUp,false);

//down

partDoorDustDownSys = part_system_create();
part_system_depth(partDoorDustDownSys,-100);

partDoorDustDown = part_type_create();
part_type_shape(partDoorDustDown,pt_shape_smoke);
part_type_color_mix(partDoorDustDown,3098978,1192777);
part_type_alpha2(partDoorDustDown,0.9776,0.0000);
part_type_life(partDoorDustDown,40.0000,50.0000);
part_type_size(partDoorDustDown,0.3500,0.4000,-0.0012,0.0028);
part_type_speed(partDoorDustDown,0.3215,1.1561,0.0037,0.0093);
part_type_direction(partDoorDustDown,45.0000,135.0000,-0.1899,0.0075);
part_type_orientation(partDoorDustDown,0.0000,360.0000,3.3055,-0.7553,0);
part_type_gravity(partDoorDustDown,0.0000,270.0000);
part_type_blend(partDoorDustDown,false);

//left

partDoorDustLeftSys = part_system_create();
part_system_depth(partDoorDustLeftSys,-100);

partDoorDustLeft = part_type_create();
part_type_shape(partDoorDustLeft,pt_shape_smoke);
part_type_color_mix(partDoorDustLeft,3098978,1192777);
part_type_alpha2(partDoorDustLeft,0.9776,0.0000);
part_type_life(partDoorDustLeft,40.0000,50.0000);
part_type_size(partDoorDustLeft,0.3500,0.4000,-0.0012,0.0028);
part_type_speed(partDoorDustLeft,0.3215,1.1561,0.0037,0.0093);
part_type_direction(partDoorDustLeft,315.0000,405.0000,-0.1899,0.0075);
part_type_orientation(partDoorDustLeft,0.0000,360.0000,3.3055,-0.7553,0);
part_type_gravity(partDoorDustLeft,0.0000,270.0000);
part_type_blend(partDoorDustLeft,false);

//right

partDoorDustRightSys = part_system_create();
part_system_depth(partDoorDustRightSys,-100);

partDoorDustRight = part_type_create();
part_type_shape(partDoorDustRight,pt_shape_smoke);
part_type_color_mix(partDoorDustRight,3098978,1192777);
part_type_alpha2(partDoorDustRight,0.9776,0.0000);
part_type_life(partDoorDustRight,40.0000,50.0000);
part_type_size(partDoorDustRight,0.3500,0.4000,-0.0012,0.0028);
part_type_speed(partDoorDustRight,0.3215,1.1561,0.0037,0.0093);
part_type_direction(partDoorDustRight,135.0000,225.0000,-0.1899,0.0075);
part_type_orientation(partDoorDustRight,0.0000,360.0000,3.3055,-0.7553,0);
part_type_gravity(partDoorDustRight,0.0000,270.0000);
part_type_blend(partDoorDustRight,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.desertDoorOpened[idd] == false
{
    with objTorchHolder
    {
        if idd = other.idd     //it's reading the idd of the first torch and it doesn't equal the idd of this second block
        {
            if lit = true
            {
                if instance_exists(objTorchHolder2)
                {
                    if objTorchHolder2.lit = true
                    {
                        with other
                        {
                            scrDesertDoorOpen();
                        }
                    }
                }
                else
                {
                    with other
                    {
                        scrDesertDoorOpen();
                    }
                }
                
            }
        }
    }
}

if room = rDesert11
{
    if global.desertDoorOpened[idd] == true
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
part_particles_clear(partDoorDustUpSys);
part_particles_clear(partDoorDustDownSys);
part_particles_clear(partDoorDustLeftSys);
part_particles_clear(partDoorDustRightSys);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy that fucker if we've already opened it before

if global.desertDoorOpened[idd] = true
{
    if instance_exists(objTorchHolder)
    {
        with objTorchHolder
        {
            if idd = other.idd
            {
                lit = true;
            }
        }
    }
    if instance_exists(objTorchHolder2)
    {
        with objTorchHolder2
        {
            if objTorchHolder.lit == true
            {
                lit = true;
            }
        }
    }
    with objBlock
    {
        if idd = other.idd
        {
            x = targetX;
            y = targetY;
        }
    }
    if up == true
    {
        y = ystart - 64;
    }
    if down == true
    {
        y = ystart + 64;
    }
    if left == true
    {
        x = xstart - 64;
    }
    if right == true
    {
        x = xstart + 64;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
