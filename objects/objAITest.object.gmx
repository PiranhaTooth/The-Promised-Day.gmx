<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprChild1Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gravity = 0.5
maxVspeed = 9;
jump = 7;

IDLE = 0;
RUNNING = 1;

LEFT = -2;
RIGHT = 2;

state = IDLE;
timer = 0;
timerMax = irandom_range(35,135);
jumpTimer = 0;

spriteRunning = sprChild1Running;
spriteIdle = sprChild1Idle;
spriteJump = sprChild1Jump;
spriteFall = sprChild1Fall;

directionChanged = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y+1,objBlock)
{
    timer ++;
}

if abs(vspeed) &gt; maxVspeed
{
    vspeed = sign(vspeed)*maxVspeed;
}

if vspeed * global.grav &lt; -0.05 
{
    sprite_index = spriteJump;
}
else if vspeed * global.grav &gt; 0.05 
{
    sprite_index = spriteFall;
}

switch state
{
    case IDLE:
    {
        sprite_index = spriteIdle;
        image_speed = 0.2;
        hspeed = 0;
        if timer = timerMax
        {        
            timerMax = irandom_range(35,210);
            if x &gt; 48 and x &lt; room_width - 48
            {
                hspeed = choose(RIGHT,LEFT);
            }
            else if x &gt; 48
            {
                hspeed = LEFT;;
            }
            else if x &lt; room_width - 48
            
            {
                hspeed = RIGHT;
            }
            timer = 0;
            state = RUNNING;
        }
    }
    break;
    case RUNNING:
    {
        if timer &lt; timerMax
        {
            directionChanged = false;
            if place_meeting(x,y + vspeed + 1,objBlock)
            {
                sprite_index = spriteRunning;
            }
            image_speed = 0.25;            
            if hspeed = LEFT
            {
                image_xscale = -1;
            }
            if hspeed = RIGHT
            {
                image_xscale = 1;
            }
            if place_meeting(x + (32 * image_xscale),y,objBlock) or place_meeting(x + -(image_xscale),y,objBlock)
            { 
                jumpTimer ++;
                if jumpTimer &lt; 2
                {
                    scrAIJump();
                }
                else
                {
                    jumpTimer = 0;
                }
                if image_xscale = -1 {hspeed = LEFT;}
                if image_xscale = 1 {hspeed = RIGHT;}
            }
        }
        else
        {
            state = IDLE;
            timer = 0;
            timerMax = irandom_range(15,50);
        }
        if x &lt; 48 or x &gt; room_width - 48
        {
            state = IDLE;
            timer = 0;
            timerMax = irandom_range(15,50);
        }
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x+hspeed,y))
{
    if (global.grav == 1)   //normal
    {
        if(hspeed &lt;= 0){move_contact_solid(180,abs(hspeed));}
        if(hspeed &gt; 0){move_contact_solid(0,abs(hspeed));}
    }
    //hspeed = 0;
}
 
if (!place_free(x,y+vspeed))
{
    if (global.grav == 1)   //normal
    {
        if(vspeed &lt;= 0){move_contact_solid(90,abs(vspeed));}
        if(vspeed &gt; 0){move_contact_solid(270,abs(vspeed));djump=1;}
    }
    vspeed = 0;
}

if (!place_free(x+hspeed,y+vspeed)) {hspeed = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
