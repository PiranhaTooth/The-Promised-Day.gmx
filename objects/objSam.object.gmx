<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSamIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999998</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setting variables and stuff
image_speed = 0.2;
image_alpha = 1;
speakerObject = objPlayer;
sprite = sprKidPortrait;
type = 0;
messageCurrent = 0;
questionCurrent = 0;
nameCurrent = 0;
actionCurrent = 0;
actionComplete = false;
objectCurrent = 0;
speakerCurrent = 0;
shh = 0;
wait = 0;
waitMax = 0;
for(var j = 0; j &lt; 10; j ++)
{
    for(var i = 0; i &lt; 100; i ++)
    {
        messageEnd[j] = 0;
        message[j,i] = "";
        action[j,i] = false;
        actionObject[j,i] = "";
        speaker[j,i] = ""; 
    }  
    question[i] = false;
    for(var k = 1; k &lt; 100; k++)
    {
        optionText[k] = "";
    }
}

npc = 0; //if 0, when touching start dialogue. If 1, when button pushed start dialogue. If 2, it's a cutscene, start immediately.

font = fntDialogue;
fontSize = font_get_size(fntDialogue);
pressed = false;

messageDraw = "";

increase = 0.8;
characters = 0;
hold = false;
maxLength = 635;
response = 0;

interact = true;
characterReset = false;

textboxWidth = 780;
textboxHeight = 160;

optionsBoxWidth = 0;
optionsBoxHeight = 0; 
amountOfOptions = 0;
longestOption = 1;

selectorY = 169;
selectorGap = 32 
selectorCurrent = 1;
selectorYLerp = 169;

padding = 6;

xx = 0;
yy = 0;

messageLength = string_length(message[messageCurrent]);

speechBubble = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///textbox code
if instance_exists(objPlayer)
{
    if place_meeting(x,y,objPlayer) and keyboard_check_pressed(vk_up) and pressed = false
    {
        interact = false;
        pressed = true
    }
    if speechBubble = true
    {
        if distance_to_object(objPlayer) &lt; 64 and pressed = false
        {
            if !instance_exists(objSpeechBubble)
            {
                instance_create(x,y,objSpeechBubble);
            }
        }
        else
        {
            if instance_exists(objSpeechBubble)
            {
                objSpeechBubble.fadeIn = false;
            }
        }
    }
    scrNPCDialogue(); 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///string_char_at for pausing

if hold = 0
{
    if string_char_at(message[type,messageCurrent],characters) = "," 
    {
        waitMax = 7;    
        if wait &lt; waitMax
        {
            wait += 1;
            increase = 0;
            hold = 0;
            shh = 1;
        }
    }
    else if string_char_at(message[type,messageCurrent],characters) = "!" or string_char_at(message[type,messageCurrent],characters) = "?" or string_char_at(message[type,messageCurrent],characters) = "." and string_char_at(message[type,messageCurrent],characters-1) != "." and string_char_at(message[type,messageCurrent],characters+1) != "."
    {
        waitMax = 15;  
        if wait &lt; waitMax
        {
            wait += 1;
            hold = 0;
            increase = 0;
            shh = 1;
        }
    }
    else if string_char_at(message[type,messageCurrent],characters) = "-" and string_char_at(message[type,messageCurrent],characters + 1) = " "
    {
        waitMax = 15;  
        if wait &lt; waitMax
        {
            wait += 1;
            hold = 0;
            increase = 0;
            shh = 1;
        }
    }
    
    else if string_char_at(message[type,messageCurrent],characters-2) + 
       string_char_at(message[type,messageCurrent],characters-1) + 
       string_char_at(message[type,messageCurrent],characters) = "..."
    {
        waitMax = 25
        if wait &lt; waitMax
        {
            wait += 1;
            hold = 0;
            increase = 0;
            shh = 1;
        }
    }
    else
    {
        waitMax = 0;
        wait = 0;     
    }
}
    
if wait &gt;= waitMax
{
    shh = 0;
    increase = 0.4;
    hold = keyboard_check_pressed(vk_shift);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///options menu
if interact = false and characters &gt;= string_length(message[type,messageCurrent]) and question[questionCurrent] = true
{        
    draw_sprite(sprSelector,0,20,selectorY);
    selectorY = lerp(selectorY,selectorYLerp + (selectorGap * selectorCurrent),0.2);                         
    if selectorCurrent  = 1
    {
        if keyboard_check_pressed(vk_up)
        {
            selectorCurrent = amountOfOptions;
        }
        if keyboard_check_pressed(vk_down)
        {
            selectorCurrent ++;
        }
    }
    else if selectorCurrent = amountOfOptions
    {
        if keyboard_check_pressed(vk_up)
        {
            selectorCurrent --;
        }
        if keyboard_check_pressed(vk_down)
        {
            selectorCurrent  = 1;
        }
    }
    else
    {
        if keyboard_check_pressed(vk_up)
        {
            selectorCurrent --;
        }
        if keyboard_check_pressed(vk_down)
        {
            selectorCurrent  ++;
        }            
    }                      
    draw_set_alpha(0.5)        
    draw_roundrect_colour(view_xview[0] + 40, 
                          view_yview[0] + 180,
                          view_xview[0] + 40 + string_width(optionText[longestOption]) + (padding * 2),
                          view_yview[0] + 180 + (amountOfOptions * selectorGap) + padding, c_black, c_black, false);
    draw_set_alpha(1)        
    for(var i = 1; i &lt;= amountOfOptions; i++)
    {
        draw_text(45,153 + (selectorGap * i),optionText[i]);
        if string_length(optionText[i]) &gt; string_length(optionText[longestOption])
        {
            longestOption = i;
        }
    }          
}       

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rectangle and text

draw_set_alpha(1);
draw_set_font(fDefault12);
if instance_exists(objPlayer)
{
    if npc = 1 and pressed = true
    {
        draw_set_alpha(0.75);
        draw_roundrect_colour(view_xview[0] + 20,view_yview[0] + 20,view_xview[0] + textboxWidth,view_yview[0] + textboxHeight, c_black,c_black,false);
        draw_set_alpha(1);
        draw_set_colour(c_white); 
        draw_set_font(font);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        draw_set_color(c_white);
        
        draw_text_ext(view_xview[0] + 25,view_yview[0] + 25,messageDraw,fontSize+(fontSize/2),maxLength - 5);
    }    
}
else
{
    //do nothing
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///views and portraits

if instance_exists(objBlackSquare) or view_current = 0
{
    draw_self();
}

if interact = false
{
    scrDialoguePortraits();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debugging

//scrDrawTextOutline(32,400,"Interact: " + string(interact),c_black,c_white);
//scrDrawTextOutline(32,432,"place_meeting: " + string(place_meeting(x,y,objPlayer)),c_black,c_white);
//scrDrawTextOutline(32,464,"speaker: " + string(speaker[type,speakerCurrent]),c_black,c_white);
//scrDrawTextOutline(32,496,"view_visible[1]: " + string(view_visible[1]),c_black,c_white);
//scrDrawTextOutline(32,528,"message length: " + string(string_length(message[type,messageCurrent])),c_black,c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
