<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSlimeIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>idd = 0;

state = 0;
START = 0
IDLE = 1;
WALKING = 2;
JUMPING = 3;
DEAD = 4;

vspeed = 0;
jump = -8;
jumped = false;
gravity = 0;
dir = choose(-1,1)

hp = 15;
hpMax = hp;

timer = 0;
timerMax = irandom_range(30,80);
image_speed = 1/5;
sprite = -1;
blocks = 0;
spd = 0;

expGiven = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.enemyKilled[room,idd] = true;

if state = DEAD
{
    scrDropExp(4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt;= 0
{
    state = DEAD;
}
if instance_exists(objPlayer)
{
    if place_meeting(x,y + 1,objBlock) and state != DEAD
    {
        timer += 1;
    }
    
    if timer = timerMax
    {
        switch state
        {
            case START:
                state = WALKING;
                break;
            case IDLE:
                jumped = false;
                state = WALKING;
                break;
            case WALKING:
                jumped = false;
                state = choose(IDLE,JUMPING);
                break;
            case JUMPING:
                jumped = false;
                state = WALKING;
        }
        if state != DEAD
        {
            timer = 0;
            timerMax = irandom_range(50,125);
        }
        
    }
    
    switch state
    {
        case IDLE:
        {
            hspeed = 0;
            if timer = round(timerMax/2)
            {
                audio_play_sound(sndSlimeShoot,10,false); 
                repeat(3)
                {
                    instance_create(x,y - 32,objSlimeball2)     
                }
            }                        
            sprite_index = sprSlimeIdle;
            if objPlayer.x &lt; x
            {
                image_xscale = 0.75;
            }    
            else if objPlayer.x &gt; x
            {
                image_xscale = -0.75;
            }
        }break;
        
        case WALKING:
        {
            sprite_index = sprSlimeIdle;
            image_speed = 1/5; 
            if place_free(x + (hspeed*3),y) and place_meeting(x - (image_xscale * 64), y + 1, objBlock)
            {
                hspeed = -(1.25 * image_xscale);
            }
            else
            {
                if image_xscale = -0.75
                {
                    image_xscale = 0.75
                }
                else if image_xscale = 0.75
                {
                    image_xscale = -0.75;
                }
            }
        
        }break;
        
        case JUMPING:
        {
            hspeed = 0;
            if jumped = false
            {
                dir = choose(-1,1)
                vspeed = jump;
                jumped = true;
                audio_play_sound(sndSlimeJump,10,false);
            }
            gravity = 0.25;
            sprite_index = sprSlimeJump;    
            if vspeed = 0 and jumped = true
            {
                audio_play_sound(sndSlimeShoot,10,false);
                scrMakeCircle(x,y,random(360),5,irandom_range(4,6),objSlimeball);
            }       
        }break;
        
        case DEAD:
        {
            if image_index &gt;= 3
            {
                image_speed = 0;
            }
            hspeed = 0;
            sprite_index = sprSlimeDeath;
            image_alpha -= 0.025;
            if image_alpha &lt;= 0
            {
                instance_destroy();
            }
            
        }
    }
}

if global.enemyKilled[room,idd] = true
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.grav == 1)   //normal
{
    if(vspeed &gt; 0)
    {
        move_contact_solid(270,abs(vspeed));
        vspeed = 0;
        gravity = 0;
    }
    if state = JUMPING
    {
        sprite_index = sprSlimeIdle;
        state = choose(WALKING,IDLE);
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn hp bar
if !instance_exists(objHP)
{
    instance_create(50,541,objHP);
    with objHP
    {
        if instance_exists(other)
        {
            object = other;
            hp = other.hp;
            hpMax = other.hpMax;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lower hp
if hp &gt; 0
{
    hp -= global.damage;   
    audio_play_sound(sndSlimeHit,10,0); 
}
with objBullet
{
    if place_meeting(x,y,objSlimeEnemy)
    {
        instance_destroy();
    }
}
if hp &lt;= 0 
{
    if !audio_is_playing(sndSlimeDeath)
    {
        audio_play_sound(sndSlimeDeath,10,false);   
    }         
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = sprSlimeJump
{
    image_speed = 0;
}
else if sprite_index != sprSlimeDeath
{
    image_speed = 1/5;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
