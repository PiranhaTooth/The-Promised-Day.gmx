<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentSong[1] = musDesert;
currentSong[2] = musDesertUnderground;


if (instance_number(object_index) &gt; 1)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch room
{
    case rDesert1:
    case rDesert2:
    case rDesert3:
    case rDesert4: 
    {
        if !audio_is_playing(currentSong[1])
        {
            audio_play_sound(currentSong[1],1,1);
            
        }
        if !audio_is_playing(currentSong[2])
        {
            audio_play_sound(currentSong[2],0,1);
        }
        audio_sound_gain(currentSong[1],1,1500);
        audio_sound_gain(currentSong[2],0,1500);
    }
    break;
    case rDesert5:
    case rDesert6:
    case rDesert7:
    case rDesert8:
    case rDesert9:
    case rDesert10:
    case rDesert11:
    case rDesert12:
    {
        if !audio_is_playing(currentSong[1])
        {
            audio_play_sound(currentSong[1],1,1);
            
        }
        if !audio_is_playing(currentSong[2])
        {
            audio_play_sound(currentSong[2],0,1);
        }
        audio_sound_gain(currentSong[1],0,1500);
        audio_sound_gain(currentSong[2],1,1500);
    }
    break;
    case rDesert13:
    case rDesert14:
    {
        if !audio_is_playing(currentSong[1])
        {
            audio_play_sound(currentSong[1],1,1);
            
        }
        if !audio_is_playing(currentSong[2])
        {
            audio_play_sound(currentSong[2],0,1);
        }
        audio_sound_gain(currentSong[1],1,1500);
        audio_sound_gain(currentSong[2],0,1500);
    }
    break;
    default:
    {
        audio_sound_gain(currentSong[1],0,1000);
        audio_sound_gain(currentSong[2],0,1000);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
