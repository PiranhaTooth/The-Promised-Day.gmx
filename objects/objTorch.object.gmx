<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTorch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawnX = 0;
spawnY = 0;

pickedUp = 0;
maxVSpeed = 9;
gravity = 0.2;

glowSize = 1;
dif = choose(0.01,-0.01,0);

partFireSys = part_system_create();
part_system_depth(partFireSys,-100);

partFire = part_type_create();
part_type_shape(partFire,pt_shape_flare);
part_type_color_mix(partFire,255,33023);
part_type_alpha2(partFire,0.5000,0.0000);
part_type_life(partFire,15.0000,30.0000);
part_type_size(partFire,0.0800,0.1500,-0.0002,0.0000);
part_type_speed(partFire,0.1000,0.5000,-0.0950,0.0043);
part_type_direction(partFire,-180.0000,360.0000,0.0000,2.0000);
part_type_orientation(partFire,0.0000,360.0000,1.6787,-2.9454,0);
part_type_gravity(partFire,0.1000,90.0000);
part_type_blend(partFire,true);

if instance_number(object_index) &gt; 1
{
    instance_destroy();
}
else
{
    if pickedUp = 0
    {
        if global.saveRoom != room
        {
            x = spawnX;
            y = spawnY;
        }
        else
        {
            x = global.savePlayerX;
            y = global.savePlayerY;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_create(partFireSys,x,y,partFire,4);

dif = choose(0.01,-0.01,0);
glowSize += dif;
glowSize = clamp(glowSize,0.95,1.05);

if instance_exists(objPlayer)
{
    if pickedUp = 1
    {
        sprite_index = sprTorchUp;
        x = objPlayer.x + (5 * objPlayer.xScale);
        y = objPlayer.y - 7;
        gravity = 0;
        
        if scrButtonCheckReleased(global.downButton)
        {
            pickedUp = 0;
        }
    }
}
else
{
    vspeed = 9;
    pickedUp = 2;
}
if pickedUp = 0
{
    vspeed = objPlayer.vspeed * 2;
    hspeed = objPlayer.hspeed;
    gravity = 0.3;
    pickedUp = 2;
}
if pickedUp = 2
{
    sprite_index = sprTorch;
}

if vspeed &gt; maxVSpeed
{
    vspeed = maxVSpeed;
}

//in scrLoadGame i've made the torch spawn on the player's saved x and y position.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objTorchHolder2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objTorchHolder2.lit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objTorchHolder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objTorchHolder
{
    if place_meeting(x,y,objTorch)
    {
        lit = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x,y+vspeed))
{
    if(vspeed &lt;= 0)
    {
        move_contact_solid(90,abs(vspeed));
    }
    if(vspeed &gt; 0)
    {    
        move_contact_solid(270,abs(vspeed));
    }
    vspeed = 0;
    hspeed = 0;
}

if (!place_free(x+hspeed,y))
{
    if(hspeed &lt;= 0)
    {
        move_contact_solid(180,abs(hspeed));
    }
    if(hspeed &gt; 0)
    {
        move_contact_solid(0,abs(hspeed));
    }
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_clear(partFireSys);
if pickedUp = 2
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set spawnX and spawnY

switch room
{
    case rDesert5:
    {
        spawnX = 626;
        spawnY = 126;
    }
    break;
    case rDesert6:
    {
        spawnX = 41;
        spawnY = 479;
    }
    break;
    case rDesert7:
    {
        spawnX = 50;
        spawnY = 510;    
    }
    break;
    case rDesert8:
    {
        spawnX = 90;
        spawnY = 126;
    }
    break;
    case rDesert9:
    {
        spawnX = 682;
        spawnY = 94;
    }
    break;
    case rDesert10:
    {
        spawnX = 46;
        spawnY = 478;
    }
    break;
    case rDesert11:
    {
        spawnX = 81;
        spawnY = 511;
    }
    break;
    case rDesert12:
    {
        if global.prevRoom = rDesert13
        {
            spawnX = 110;
            spawnY = 78;
        }
        else
        {
            spawnX = 719;
            spawnY = 574;
        }
    }
    break;
    default:
    {
        instance_destroy();
    }
    break;
}

if pickedUp = 0
{
    if global.saveRoom != room_get_name(room)
    {
        x = spawnX;
        y = spawnY;
    }
    else
    {
        x = global.savePlayerX;
        y = global.savePlayerY;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objPlayer)
{
    x = global.savePlayerX;
    y = global.savePlayerY;
}
else
{
    instance_deactivate_object(self);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_alpha(1);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_font(fntDialogue);
//draw_text(64,400,"saveRoom: " + string(global.saveRoom));
//draw_text(64,424,"room: " + string(room));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
