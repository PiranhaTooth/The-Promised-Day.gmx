<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create surface

expSurf = -1;


//make sure we never have more than one world object

if (instance_number(object_index) &gt; 1)
    instance_destroy();
    
///exp variables

//exp calculation
expNeeded = 0;

//exp ui
experience = 15;
expXscale = 1;
expX = 16;
expY = 16;
expAlpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(expSurf)
{
    surface_free(expSurf);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw exp stuff

draw_enable_alphablend(true);

//do exp calculations 

expNeeded = 100 * (1 + (global.playerLevel * 0.1));

if (global.playerExperience / expNeeded) &gt;= 1
{
    global.playerLevel ++;
    global.playerExperience = 0;
    instance_create(28,48,objLevelUp);
}

//draw exp UI

if global.playerExperience != 0
{
    expXscale = lerp(expXscale,global.playerExperience * (235 / expNeeded),0.085);  //235 is the sprite width for the sprExpProgress sprite
}
else
{
    expXscale = 0;
}

draw_sprite_ext(sprExpUI,global.playerLevel - 1,view_xview[0] + 16,view_yview[0] + 16,1,1,0,c_white,expAlpha);

//draw surface
if !surface_exists(expSurf)
{
    expSurf = surface_create(sprite_get_width(sprExpUI),sprite_get_height(sprExpUI));
}

draw_sprite_part_ext(sprExpProgress,0,0,0,expXscale,58,view_xview[0] + 16,view_yview[0] + 16,1,1,c_white,expAlpha);   //progress
draw_sprite_part_ext(sprExpProgressOutline,0,0,0,expXscale,58,view_xview[0] + 16,view_yview[0] + 16,1,1,c_white,expAlpha); //progress

surface_set_target(expSurf);    //surface

draw_clear_alpha(c_black, 0);

draw_set_color_write_enable(1, 1, 1, 0);
draw_sprite(sprExpProgressBlendMode,0,0,0);

draw_set_blend_mode_ext(bm_dest_colour,bm_inv_src_alpha);

draw_set_color_write_enable(1, 1, 1, 1);
if global.playerExperience != 0
{
    draw_sprite_ext(sprExpProgressOutlineRight,0,0 + expXscale-2,16,1,1,0,c_white,expAlpha);
}

draw_set_blend_mode(bm_normal);

surface_reset_target();

draw_enable_alphablend(false)
draw_surface(expSurf,view_xview[0] + 16,view_yview[0] + 16);
draw_enable_alphablend(true)

if instance_exists(objPlayer)
{
    if objPlayer.x &lt; 216 and objPlayer.y &lt; 128
    {
        if expAlpha &gt; 0.05
        {
            expAlpha -= 0.05;
        }
    }
    else
    {
        if expAlpha &lt; 1
        {
            expAlpha += 0.05;
        }
    }
}
else
{
    expAlpha = 0;
}


//draw_text(32,156,"Level: " + string(global.playerLevel));
//draw_text(32,180,"Exp: " + string(global.playerExperience) + " / " + string(expNeeded));
//draw_text(32,196,"ExpXScale: " + string(expXscale));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
